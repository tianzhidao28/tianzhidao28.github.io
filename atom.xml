<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>rocyuan</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.rocyuan.com/"/>
  <updated>2016-06-26T12:57:48.000Z</updated>
  <id>http://www.rocyuan.com/</id>
  
  <author>
    <name>rocyuan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java ClassLoader加载机制与SOA优化</title>
    <link href="http://www.rocyuan.com/2016/Java-ClassLoader%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6%E4%B8%8ESOA%E4%BC%98%E5%8C%96/"/>
    <id>http://www.rocyuan.com/2016/Java-ClassLoader加载机制与SOA优化/</id>
    <published>2016-06-26T12:56:54.000Z</published>
    <updated>2016-06-26T12:57:48.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Java-ClassLoader-类加载-与-SOA后期优化&quot;&gt;&lt;a href=&quot;#Java-ClassLoader-类加载-与-SOA后期优化&quot; class=&quot;headerlink&quot; title=&quot;Java ClassLoader 类加载 与 SOA后期优化&quot;&gt;&lt;/a&gt;Java ClassLoader 类加载 与 SOA后期优化&lt;/h1&gt;&lt;h2 id=&quot;现在见到的一些应用部署方式-我见到的&quot;&gt;&lt;a href=&quot;#现在见到的一些应用部署方式-我见到的&quot; class=&quot;headerlink&quot; title=&quot;现在见到的一些应用部署方式(我见到的)&quot;&gt;&lt;/a&gt;现在见到的一些应用部署方式(我见到的)&lt;/h2&gt;&lt;p&gt;&lt;code&gt;只能说是我见到的这2种&lt;/code&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1 . mvn clean package 打成war 再丢到web容器&lt;/li&gt;&lt;li&gt;2 . mvn clean package 打成jar 直接运行(&lt;code&gt;这是我这一年才见到的这么粗暴的方式&lt;/code&gt;),但也简单干脆,&lt;br&gt;最近看jetty 官网也逐渐感觉或许这是个不错的单应用选择吧&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://7xogqz.com1.z0.glb.clouddn.com/jetty_office.png&quot; alt=&quot;jetty官网&quot;&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Don’t deploy your application in Jetty, deploy Jetty in your application!&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;code&gt;use jetty as a http module,not a web container just a module of your application&lt;/code&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;在一个大的系统砸碎成一片片的服务的后期,就会产生一大波妹子了, 不 , 一大波的服务s,&lt;br&gt;一般一个服务(以 java 为例)的组成是:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;一些公共jar&lt;/code&gt;: spring-&lt;strong&gt;.jar , common-*.jar , db&lt;/strong&gt;jar,cache**.jar &lt;code&gt;一般有个 大于 10M&lt;/code&gt;&lt;/li&gt;&lt;li&gt;一些公共rpc jar : eg:dubbo**.jar 或其他的jar&lt;/li&gt;&lt;li&gt;业务相关jar,class,resources&lt;br&gt;这些jar都是要加载在内存里的啊；&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;10个就重复10遍 &lt;code&gt;9 * 10M&lt;/code&gt;(?)内存的浪费&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;当然在 内存也就那点钱,&lt;strong&gt;摩尔定律&lt;/strong&gt; 完全可以解决这个问题,&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;code&gt;能用钱解决的问题更本就不是问题&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;到此结束！！！！&lt;br&gt;谢谢&lt;/p&gt;&lt;p&gt;朴素的劳动人民的品格教育我们,贪污浪费都是犯罪.&lt;br&gt;同时也见到有朋友公司有把公共的一部分jar抽离放在容器里共享的先例。&lt;/p&gt;&lt;h2 id=&quot;question&quot;&gt;&lt;a href=&quot;#question&quot; class=&quot;headerlink&quot; title=&quot;question&quot;&gt;&lt;/a&gt;question&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;写在前面的话： 首先共享的前提是：大家都在运行在同一个进程里??&lt;br&gt;一个tomcat 或其他web容器也是可以多实例运行.??&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;[x] 要共享的话 jar应该放在哪里？直接丢在jdk安装目录里的lib 行不行，为啥子( &lt;code&gt;不行！！&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;[ ] 哪些是可以抽离去共享，大家都用的就可以共享吗&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;Java-Class-Loader简介&quot;&gt;&lt;a href=&quot;#Java-Class-Loader简介&quot; class=&quot;headerlink&quot; title=&quot;Java Class Loader简介&quot;&gt;&lt;/a&gt;Java Class Loader简介&lt;/h2&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201104/10/0_1302447836COCZ.gif&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;code&gt;Bootstrp Class Loader&lt;/code&gt; 加载过的jar是：jre/lib,jre/classses&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   * bootstrap 加载的核心内裤&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;URL[] urls=sun.misc.Launcher.getBootstrapClassPath().getURLs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; urls.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(urls[i].toExternalForm());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;file:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/resources.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/sunrsasign.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jsse.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jce.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/charsets.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jfr.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/classes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;ExtClassLoader :&lt;/code&gt; 加载的是jre\lib\ext 目录或者,参数 java.ext.dirs指定的目录&lt;/p&gt;&lt;p&gt;&lt;code&gt;AppClassLoader :&lt;/code&gt; 加载 classpath 指定的目录 ,我们自己写的Java文件一般默认就是这货加载的,&lt;/p&gt;&lt;p&gt;&lt;code&gt;XXXXClassLoader :&lt;/code&gt;自己定义加载类的classloader——&amp;gt;parent = AppCLassLoader&lt;/p&gt;&lt;h3 id=&quot;类加载机制&quot;&gt;&lt;a href=&quot;#类加载机制&quot; class=&quot;headerlink&quot; title=&quot;类加载机制&quot;&gt;&lt;/a&gt;类加载机制&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;向上委托,全部丢给你老大,你老大再丢给他的老大,当老大搞定不了了，就交给他小弟喽。。。直到你的直接领导也搞不定 就交给你去搞&lt;br&gt;全盘负责, 一旦某个classLoader决定加载一个类的时候,这个类用过的对象的那些类也由这个ClassLoader负责了..你用过的对象,别人怎么用(™D,这个世界那么多别人用过的对象…)。。。你自己统统搞定吧&lt;/p&gt;&lt;/blockquote&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/lovingprince/EntryImages/20090702/%E5%B9%BB%E7%81%AF%E7%89%878.PNG&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;ClassLoader.java&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@CallerSensitive&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ClassLoader &lt;span class=&quot;title&quot;&gt;getParent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (parent == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SecurityManager sm = System.getSecurityManager();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sm != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            checkClassLoaderPermission(parent, Reflection.getCallerClass());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; parent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Class&amp;lt;?&amp;gt; loadClass(String name, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; resolve)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ClassNotFoundException&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (getClassLoadingLock(name)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// First, check if the class has already been loaded&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 检查是否被加载过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Class c = findLoadedClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; t0 = System.nanoTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (parent != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// go daddy 丢给你爸爸去加载,递归下去 找你爷爷,....&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        c = parent.loadClass(name, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// ExtClassLoader的 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        c = findBootstrapClassOrNull(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (ClassNotFoundException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// ClassNotFoundException thrown if class not found&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// from the non-null parent class loader&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// If still not found, then invoke findClass in order&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// to find the class.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; t1 = System.nanoTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    c = findClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// this is the defining class loader; record the stats&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sun.misc.PerfCounter.getParentDelegationTime().addTime(t1 - t0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sun.misc.PerfCounter.getFindClassTime().addElapsedTimeFrom(t1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sun.misc.PerfCounter.getFindClasses().increment();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (resolve) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                resolveClass(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;随手写了一段验证下 自定义的ClassLoader;得到的 父ClassLoader是ExtClassLoader ….&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;FileSystemClassLoader fileSystemClassLoader = new FileSystemClassLoader(&amp;quot;/&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(&amp;quot;classpath: &amp;quot; + fileSystemClassLoader.getParent().toString());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;凭什么啊！ 从代码上也没看出指定父ClassLoader的地方,我艹&lt;br&gt;后留意到&lt;br&gt;&lt;code&gt;@CallerSensitive&lt;/code&gt;&lt;br&gt;public final ClassLoader getParent()&lt;/p&gt;&lt;p&gt;这个鬼注解,&lt;br&gt;从Oracle官网找了一段话 依然没怎么看懂,,(有了解少少或看到相关人能看懂的说明,@我)&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Guideline 9-9 / ACCESS-9: Safely invoke standard APIs that perform tasks using the immediate caller&amp;apos;s class loader instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The following static methods perform tasks using the immediate caller&amp;apos;s class loader:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        java.lang.Class.forName&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        java.lang.Package.getPackage(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        java.lang.Runtime.load&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        java.lang.Runtime.loadLibrary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        java.lang.System.load&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        java.lang.System.loadLibrary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        java.sql.DriverManager.deregisterDriver		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        java.sql.DriverManager.getConnection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        java.sql.DriverManager.getDriver(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        java.util.logging.Logger.getAnonymousLogger&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        java.util.logging.Logger.getLogger&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        java.util.ResourceBundle.getBundle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Methods such as these that vary their behavior according to the immediate caller&amp;apos;s class are considered to be caller-sensitive, and should be annotated in code with the @CallerSensitive annotation [16].&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;For example, System.loadLibrary(&amp;quot;/com/foo/MyLib.so&amp;quot;) uses the immediate caller&amp;apos;s class loader to find and load the specified library. (Loading libraries enables a caller to make native method invocations.) Do not invoke this method on behalf of untrusted code, since untrusted code may not have the ability to load the same library using its own class loader instance. Do not invoke any of these methods using inputs provided by untrusted code, and do not propagate objects that are returned by these methods back to untrusted code.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;不纠结这个鬼了。&lt;/p&gt;&lt;h3 id=&quot;Jetty-Web容器的-ClassLoader&quot;&gt;&lt;a href=&quot;#Jetty-Web容器的-ClassLoader&quot; class=&quot;headerlink&quot; title=&quot;Jetty Web容器的 ClassLoader :&quot;&gt;&lt;/a&gt;Jetty Web容器的 ClassLoader :&lt;/h3&gt;&lt;p&gt;每个web上下文（web应用和war文件）的普通配置是有自身的classloader，系统的classloader是它的父类。这是普通的java classloader的层次，但是servlet规范提出了负责的层次要求：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;在WEB-INF/lib和WEB-INF/classes中包含的类的加载优先级高于父classloader中的类。这和普通的java2的classloader加载动作相反。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;像java.lang.String这样的系统类不会被WEB-INF/lib或者WEB-INF/classes中的类替代。不幸的是，servlet规范并没有清楚的规定哪些类是系统类，也没有清楚的指出javax类应该作为系统类&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Server实现类应该对web应用和其他classloader不可见。不幸的是，servelt规范并没有规定什么是server class ，也没有清楚的指出像xerces parser 这样的common libraries应该作为实现类。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;具体的哪些jar 放在 jetty.home/XXX/lib 下 还是其他什么地方,看诸位的实验结果了…&lt;/p&gt;&lt;p&gt;&lt;code&gt;(全是空口无凭)&lt;/code&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;http://7xogqz.com1.z0.glb.clouddn.com/qrcode_for_gh_ee75564456c8_430.jpg&quot; alt=&quot;qrcode&quot;&gt;&lt;/p&gt;&lt;hr&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Java-ClassLoader-类加载-与-SOA后期优化&quot;&gt;&lt;a href=&quot;#Java-ClassLoader-类加载-与-SOA后期优化&quot; class=&quot;headerlink&quot; title=&quot;Java ClassLoader 类加载 与 SOA后期优化&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SOA的发展与毁灭</title>
    <link href="http://www.rocyuan.com/2016/SOA%E7%9A%84%E5%8F%91%E5%B1%95%E4%B8%8E%E6%AF%81%E7%81%AD/"/>
    <id>http://www.rocyuan.com/2016/SOA的发展与毁灭/</id>
    <published>2016-06-26T12:40:00.000Z</published>
    <updated>2016-06-26T12:42:44.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;SOA的发展与毁灭&quot;&gt;&lt;a href=&quot;#SOA的发展与毁灭&quot; class=&quot;headerlink&quot; title=&quot;SOA的发展与毁灭&quot;&gt;&lt;/a&gt;SOA的发展与毁灭&lt;/h1&gt;&lt;h2 id=&quot;SOA-发展之路&quot;&gt;&lt;a href=&quot;#SOA-发展之路&quot; class=&quot;headerlink&quot; title=&quot;SOA 发展之路&quot;&gt;&lt;/a&gt;SOA 发展之路&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;dubbo plugin&lt;ul&gt;&lt;li&gt;(1) dubbo + thrift（可以参照dubbo源码里关于RMI的实现继续优化） 与现有的thrift服务兼容管理的解决代码（已经可以使用）&lt;/li&gt;&lt;li&gt;(2)dubbo container: 监视所有dubbo服务的启动与关闭，用极光的监控系统发送通知消息&lt;/li&gt;&lt;li&gt;(3)dubbo+python+thrift:(未完成版)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;SOA一年后出现的问题的解决方案&quot;&gt;&lt;a href=&quot;#SOA一年后出现的问题的解决方案&quot; class=&quot;headerlink&quot; title=&quot;SOA一年后出现的问题的解决方案&quot;&gt;&lt;/a&gt;SOA一年后出现的问题的解决方案&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.v2ex.com/t/243773#reply0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.v2ex.com/t/243773#reply0&lt;/a&gt;&lt;/p&gt;&lt;h2 id=&quot;SOA升级与抛弃-3-10年内的解决方案与思路&quot;&gt;&lt;a href=&quot;#SOA升级与抛弃-3-10年内的解决方案与思路&quot; class=&quot;headerlink&quot; title=&quot;SOA升级与抛弃  3-10年内的解决方案与思路&quot;&gt;&lt;/a&gt;SOA升级与抛弃 3-10年内的解决方案与思路&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.zybuluo.com/tianzhidao28/note/382583&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.zybuluo.com/tianzhidao28/note/382583&lt;/a&gt;&lt;/p&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SOA的发展与毁灭&quot;&gt;&lt;a href=&quot;#SOA的发展与毁灭&quot; class=&quot;headerlink&quot; title=&quot;SOA的发展与毁灭&quot;&gt;&lt;/a&gt;SOA的发展与毁灭&lt;/h1&gt;&lt;h2 id=&quot;SOA-发展之路&quot;&gt;&lt;a href=&quot;#SOA-发展之路&quot; class=&quot;
    
    </summary>
    
      <category term="dubbo" scheme="http://www.rocyuan.com/categories/dubbo/"/>
    
    
      <category term="dubbo" scheme="http://www.rocyuan.com/tags/dubbo/"/>
    
  </entry>
  
  <entry>
    <title>快速书写dubbo服务 与 API项目</title>
    <link href="http://www.rocyuan.com/2016/SOA%E4%BB%8A%E5%A4%A9/"/>
    <id>http://www.rocyuan.com/2016/SOA今天/</id>
    <published>2016-06-19T19:39:00.000Z</published>
    <updated>2016-06-26T12:39:56.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;快速书写dubbo服务-与-API项目&quot;&gt;&lt;a href=&quot;#快速书写dubbo服务-与-API项目&quot; class=&quot;headerlink&quot; title=&quot;快速书写dubbo服务 与 API项目&quot;&gt;&lt;/a&gt;快速书写dubbo服务 与 API项目&lt;/h1&gt;&lt;h2 id=&quot;what&quot;&gt;&lt;a href=&quot;#what&quot; class=&quot;headerlink&quot; title=&quot;what&quot;&gt;&lt;/a&gt;what&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;这是 一个用来快速生成dubbo项目或者 使用dubbo来些 api的模版项目, 可以帮你节约&lt;code&gt;80%&lt;/code&gt;的开发时间&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&quot;why&quot;&gt;&lt;a href=&quot;#why&quot; class=&quot;headerlink&quot; title=&quot;why&quot;&gt;&lt;/a&gt;why&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;1个命令帮你在&lt;code&gt;20秒&lt;/code&gt;构件一个完整的项目,再也不用花时间去搭建项目，找各种依赖,里面还帮你自动 加入了developer-commons包,dubbo2.8.4,zk的包, dubbo的本地配置 和 正式的配置&lt;/li&gt;&lt;li&gt;子模块清晰明了的分模块结构 和 demo,让你即使不会dubbo 也可以快速完成你的业务服务&lt;/li&gt;&lt;li&gt;完善的打包方式。 考虑到各种情况, 此生成项目可以打出各种包，&lt;ul&gt;&lt;li&gt;最小的jar,&lt;/li&gt;&lt;li&gt;包含所有jar文件的可执行jar包,&lt;/li&gt;&lt;li&gt;将jar文件和配置文件分开的压缩包(&lt;code&gt;推荐方式&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;可以让第三种方式快速发布的最小压缩包包&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;完善的运行发布安装脚本&lt;ul&gt;&lt;li&gt;一键发布接口的脚本&lt;/li&gt;&lt;li&gt;修复了dubbo官方脚本里在我们服务器出现的问题的,启动,暂停,重启脚本&lt;/li&gt;&lt;li&gt;配合我们现在使用的supervisor的启动服务脚本&lt;/li&gt;&lt;li&gt;还有一个本地发布脚本（需要配置免密登录,改写）&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;最重的一点:&lt;blockquote&gt;&lt;p&gt;里面有我引以为傲的 API异常码的一种设计思路,将 异常与APICode结合的设计思路, 少了你一些在API设计过程中的 if else 和校验之类的&lt;code&gt;杂质&lt;/code&gt;出现在你的项目里，强烈推荐使用,demo或者说是这个模版项目的原型在&lt;a href=&quot;http://*********/portal/portal-services&quot; title=&quot;portal-service&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;portal-service&lt;/a&gt; ,源码在git@ssh-&lt;em&gt;**&lt;/em&gt;.com:portal/portal-services.git&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;how&quot;&gt;&lt;a href=&quot;#how&quot; class=&quot;headerlink&quot; title=&quot;how&quot;&gt;&lt;/a&gt;how&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;在终端下执行&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mvn archetype:generate -DgroupId=cn.jpush -DartifactId=xx-service -Dpackage=你的包名  -DarchetypeVersion=1.0.0 -DarchetypeArtifactId=dubbox-service-archetype -DarchetypeGroupId=cn.jpush -DinteractiveMode=false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; mvn archetype:generate -DgroupId=cn.jpush -DartifactId=xx-service -Dpackage=cn.jpush.xx  -DarchetypeVersion=1.0.0 -DarchetypeArtifactId=dubbox-service-archetype -DarchetypeGroupId=cn.jpush -DinteractiveMode=false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;在IDE里面生成项目&lt;/p&gt;&lt;p&gt;IDEA:&lt;br&gt;&lt;img src=&quot;http://7xogqz.com1.z0.glb.clouddn.com/QQ20160128-1.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;end&quot;&gt;&lt;a href=&quot;#end&quot; class=&quot;headerlink&quot; title=&quot;end&quot;&gt;&lt;/a&gt;end&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xogqz.com1.z0.glb.clouddn.com/xxservice.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;快速书写dubbo服务-与-API项目&quot;&gt;&lt;a href=&quot;#快速书写dubbo服务-与-API项目&quot; class=&quot;headerlink&quot; title=&quot;快速书写dubbo服务 与 API项目&quot;&gt;&lt;/a&gt;快速书写dubbo服务 与 API项目&lt;/h1&gt;&lt;h2 i
    
    </summary>
    
      <category term="dubbo" scheme="http://www.rocyuan.com/categories/dubbo/"/>
    
    
      <category term="dubbo" scheme="http://www.rocyuan.com/tags/dubbo/"/>
    
      <category term="soa" scheme="http://www.rocyuan.com/tags/soa/"/>
    
      <category term="service" scheme="http://www.rocyuan.com/tags/service/"/>
    
      <category term="api" scheme="http://www.rocyuan.com/tags/api/"/>
    
      <category term="java" scheme="http://www.rocyuan.com/tags/java/"/>
    
      <category term="rpc" scheme="http://www.rocyuan.com/tags/rpc/"/>
    
  </entry>
  
</feed>
